<?php
// tests/Controller/ClientControllerTest.php
namespace App\tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;


class SecurityControllerTest extends WebTestCase
{
    /**
    * @var \Doctrine\ORM\EntityManager
    */
    private $entityManager;

    
    /*public function testloginAction()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/login');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());

        //Deuxième test
        $link = $crawler
        ->filter('a:contains("Créer un utilisateur")') // find all links with the text "Créer un utilisateur"
        ->eq(0) // select the first link in the list
        ->link();
        // and click it
        $crawler = $client->click($link);

        //Troisième test
        $form = $crawler->selectButton('submit')->form();

        // set some values
        $form['username'] = 'user4';
        $form['password'] = 'user4';

        // submit the form
        $crawler = $client->submit($form);

        //Quatrième test
        // asserts that the response matches a given CSS selector.
        $this->assertGreaterThan(0, $crawler->filter('a')->count());

        /*$this->assertContains(
        'Hello World',
        $client->getResponse()->getContent()
        );*/

        //Cinquième test
        // asserts that the response is a redirect to login_check
        /*$this->assertTrue(
        $client->getResponse()->isRedirect('login_check')
        // if the redirection URL was generated as an absolute URL
        // $client->getResponse()->isRedirect('http://localhost/demo/contact')
        );

        //Sixième test
        // ...or simply check that the response is a redirect to any URL
        $this->assertTrue($client->getResponse()->isRedirect());

        //Septième test
        // asserts that there are exactly 1 h1 tags on the page
        $this->assertCount(1, $crawler->filter('h1'));
        // asserts that the "Content-Type" header is "application/json"
        $this->assertTrue
        (
            $client->getResponse()->headers->contains
            (
                '<title>To Do List app</title>'
            ),
            
        );
        
        
    }

    public function loginCheck()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/login_check');
        
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());
        
    }

    public function testLogoutCheck()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/logout');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());
        
    }*/
}