<?php
// tests/Controller/ClientControllerTest.php
namespace App\tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use App\Entity\Task;

class TaskControllerTest extends WebTestCase
{
    /**
    * @var \Doctrine\ORM\EntityManager
    */
    private $entityManager;

    
    public function testGetlistAction()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/tasks');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());

        //Deuxième test
        // asserts that there are exactly 1 h1 tags on the page
       /* $this->assertCount(1, $crawler->filter('h4'));

        //Troisième test
        // asserts that the "Content-Type" header is "application/json"
        $this->assertTrue
        (
            $client->getResponse()->headers->contains
            (
                '<title>To Do List app</title>'
            ),
            
        );

        //Quatrième test
        $link = $crawler
        ->filter('a:contains("Créer un utilisateur")') // find all links with the text "Créer un utilisateur"
        ->eq(0) // select the first link in the list
        ->link();
        // and click it
        $crawler = $client->click($link);*/
        
        
    }

    /*public function testCreateAction()
    {
        $client = static::createClient();
        $crawler = $client->request('POST', '/tasks/create');
        
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());

        //Deuxième test
        $link = $crawler
        ->filter('a:contains("Créer un utilisateur")') // find all links with the text "Créer un utilisateur"
        ->eq(0) // select the first link in the list
        ->link();
        // and click it
        $crawler = $client->click($link);

        
    }

    public function testEditAction()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/tasks/{id}/edit');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());

        //Deuxième test
        $link = $crawler
        ->filter('a:contains("Créer un utilisateur")') // find all links with the text "Créer un utilisateur"
        ->eq(0) // select the first link in the list
        ->link();
        // and click it
        $crawler = $client->click($link);

        //Troisième test
        $form = $crawler->selectButton('submit')->form();

        // set some values
        $form['title'] = 'Coiffeur';
        $form['content'] = 'RDV coiffeur à 16h .';

        // submit the form
        $crawler = $client->submit($form);

        //Quatrième test
        // asserts that the response matches a given CSS selector.
        $this->assertGreaterThan(0, $crawler->filter('a')->count());

    }

    public function testToggleTaskAction()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/tasks/{id}/toggle');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());
        
    }

    public function testDeleteTaskAction()
    {
        $client = static::createClient();
        $crawler = $client->request('GET', '/tasks/{id}/delete');
        // Premier test
        $this->assertEquals(200, $client->getResponse()->getStatusCode());
        
    }*/

    


}